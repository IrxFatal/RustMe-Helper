import discord
from discord.ext import commands
import json
import config_manif as cfg
import discord.ext.commands.errors

import logging

class ColoredFormatter(logging.Formatter):
    COLORS = {
        'DEBUG': '\033[94m',   # Blue
        'INFO': '\033[92m',    # Green
        'WARNING': '\033[93m', # Yellow
        'ERROR': '\033[91m',   # Red
        'CRITICAL': '\033[95m' # Magenta
    }
    RESET = '\033[0m'

    def format(self, record):
        color = self.COLORS.get(record.levelname, self.RESET)
        formatted_message = f"[{self.formatTime(record)}] | {color}{record.levelname}{self.RESET} | {record.getMessage()}"
        return formatted_message

    def formatTime(self, record, datefmt=None):
        return logging.Formatter.formatTime(self, record, datefmt='%Y-%m-%d %H:%M:%S')


logger = logging.getLogger(__name__)
handler = logging.StreamHandler()
formatter = ColoredFormatter("[%(asctime)s] | %(levelname)s | %(message)s", datefmt='%Y-%m-%d %H:%M:%S')
handler.setFormatter(formatter)
logger.addHandler(handler)
logger.setLevel(logging.DEBUG)

def load_rp():
    with open("configs/resourcepacks.json", "r", encoding='utf-8') as file:
        data = json.load(file)
        return data
    
def category_color(category: str):
    match category:
        case "–ö–ª–∞—Å—Å–∏–∫–∞":
            return discord.Colour.og_blurple()
        case "DLC":
            return discord.Colour.brand_red()
        case "–ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π":
            return discord.Colour.dark_blue()

class CategorySelect(discord.ui.Select):
    def __init__(self):
        data = load_rp()
        options = [
            discord.SelectOption(label=category, emoji="<:folder:1275747167428149298>") for category in data["resourcepacks"].keys()
        ]
        super().__init__(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é...", options=options)

    async def callback(self, interaction: discord.Interaction):
        await interaction.response.defer(ephemeral=True)
        selected_category = self.values[0]
        await interaction.followup.send(
            content=f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: {selected_category}",
            view=PackSelectView(selected_category), 
            ephemeral=True
            
        )
        
        
        
class HelpSelect(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(label="–ü–æ–º–æ—â—å —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π DLC", emoji="‚ùî", value="dlc"),
            discord.SelectOption(label="–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –†–ü", emoji="‚ùî", value="addyour"),
            discord.SelectOption(label="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ", emoji="üìù", value="rules")
        ]
        super().__init__(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é...", options=options)

    async def callback(self, interaction: discord.Interaction):
        selected_category = self.values[0]
        match selected_category:
            case "dlc":
                embed = discord.Embed(title="–ú–∞–Ω—É–∞–ª –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ DLC", color=discord.Colour.green())
                embed.add_field(name="–ß—Ç–æ —Ç–∞–∫–æ–µ DLC?", value="–î–∞–≤–∞–π—Ç–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–º. –ï—Å—Ç—å **DLC –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º 1**, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–º–µ–Ω—è–µ—Ç —Ü–≤–µ—Ç –∫–∞–±–∞–Ω–∞ –Ω–∞ –∫—Ä–∞—Å–Ω—ã–π, –∞ —Ç–∞–∫–∂–µ –µ—Å—Ç—å **2-–µ DLC** –∫–æ—Ç–æ—Ä—ã–π –∑–∞–º–µ–Ω—è–µ—Ç —Ü–≤–µ—Ç –∫–∞–±–∞–Ω–∞ –Ω–∞ —Å–∏–Ω–∏–π –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–∞ —à—Ç—É—Ä–º–æ–≤—É—é –≤–∏–Ω—Ç–æ–≤–∫—É —Å–∫–∏–Ω.", inline=False)
                embed.add_field(name="–ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å?", value="# **–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã** –î–∞–≤–∞–π—Ç–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–º. –ï—Å—Ç—å **DLC –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º 1**, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–º–µ–Ω—è–µ—Ç —Ü–≤–µ—Ç –∫–∞–±–∞–Ω–∞ –Ω–∞ –∫—Ä–∞—Å–Ω—ã–π, –∞ —Ç–∞–∫–∂–µ –µ—Å—Ç—å __2-–µ DLC__ –∫–æ—Ç–æ—Ä—ã–π –∑–∞–º–µ–Ω—è–µ—Ç —Ü–≤–µ—Ç –∫–∞–±–∞–Ω–∞ –Ω–∞ —Å–∏–Ω–∏–π –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–∞ —à—Ç—É—Ä–º–æ–≤—É—é –≤–∏–Ω—Ç–æ–≤–∫—É —Å–∫–∏–Ω –£ –Ω–∞—Å –µ—Å—Ç—å *–æ—Å–Ω–æ–≤–Ω–æ–π RP*, –¥–æ–ø—É—Å—Ç–∏–º –≤–æ–∑—å–º—ë–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ—Å—É—Ä—Å –ø–∞–∫ RustMe. –û—Å–Ω–æ–≤–Ω—ã–º RP –º–æ–∂–µ—Ç –±—ã—Ç—å –∏ –Ω–∞—à —Ä–µ—Å—É—Ä—Å –ø–∞–∫ –∏–ª–∏ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –û—Å–Ω–æ–≤–Ω–æ–π RP –º—ã *–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ* —Å—Ç–∞–≤–∏–º –≤ —Å–∞–º—ã–π –Ω–∏–∑. –°—Ç–∞–≤–∏–º –Ω–∞–≤–µ—Ä—Ö –æ—Å–Ω–æ–≤–Ω–æ–≥–æ RP __2-–µ DLC__. –í –∏–≥—Ä–µ –º–µ–Ω—è–µ—Ç—Å—è –Ω–µ –≤–µ—Å—å —Ä–µ—Å—É—Ä—Å –ø–∞–∫, –∞ —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –∏–º–µ–µ—Ç—Å—è –≤–æ __2-–º DLC__, –∞ —ç—Ç–æ –∫–∞–∫ –º—ã –ø–æ–º–Ω–∏–º —Å–∏–Ω–∏–π –∫–∞–±–∞–Ω –∏ —Å–∫–∏–Ω –Ω–∞ —à—Ç—É—Ä–º–æ–≤—É—é –≤–∏–Ω—Ç–æ–≤–∫—É. –¢–µ–ø–µ—Ä—å —Å—Ç–∞–≤–∏–º –≤—ã—à–µ  __2-–æ DLC__ **1-–µ DLC** –∏ –≤ –∏–≥—Ä–µ –º–µ–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫–∞–±–∞–Ω, —Ç–µ–ø–µ—Ä—å –æ–Ω –∫—Ä–∞—Å–Ω—ã–π, –Ω–æ —Å–∫–∏–Ω –Ω–∞ –≤–∏–Ω—Ç–æ–≤–∫—É –æ—Å—Ç–∞—ë—Ç—Å—è. –¢–µ–ø–µ—Ä—å –µ—Å–ª–∏ –º—ã –ø–æ–¥–Ω–∏–º–µ–º __2-–µ DLC__ —Ç–∞–∫ —á—Ç–æ–±—ã **1-–µ DLC** –±—ã–ª–æ —Å–Ω–∏–∑—É, —Ç–æ –∫—Ä–∞—Å–Ω–æ–≥–æ –∫–∞–±–∞–Ω–∞ —É–∂–µ –Ω–µ –±—É–¥–µ—Ç, —Ç–µ–ø–µ—Ä—å –≤ –∏–≥—Ä–µ —Ç–æ–ª—å–∫–æ —Å–∏–Ω–∏–π –∫–∞–±–∞–Ω —Å —Å–∫–∏–Ω–æ–º –Ω–∞ –≤–∏–Ω—Ç–æ–≤–∫—É. `DLC –º–µ–Ω—è–µ—Ç –æ–±—ä–µ–∫—Ç—ã –≤–æ –≤—Å–µ—Ö —Ä–µ—Å—É—Ä—Å –ø–∞–∫–∞—Ö —Å–Ω–∏–∑—É —Ç–æ, —á—Ç–æ –≤ –Ω–µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ", inline=False)
                embed.add_field(name="–ü—Ä–∏–º–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∫–∏", value="LumberJack Pack - *DLC*\nRP CLASS565 4.1 - *–û—Å–Ω–æ–≤–Ω–æ–π RP*")
                embed.set_footer(text="–ê–≤—Ç–æ—Ä –º–∞–Ω—É–∞–ª–∞: CLASS565 | https://discord.gg/rRBgS9hzQe")
                embed.set_image(url="https://cdn.discordapp.com/attachments/1043851361432903742/1050155090742353940/image.png?ex=66c6fe64&is=66c5ace4&hm=5ce5f47e841ea3d15724070b5f86b09eb2c7a62f78fdc4ed01e2a4ee404a6846&")     
            case "addyour":
                embed = discord.Embed(title="–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", color=discord.Colour.purple())
                embed.description = "–í—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –†–ü –∏ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ –±–æ—Ç–∞?\n –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/offer` –∏ –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞."
            case "rules":
                embed = discord.Embed(title="–ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", color=discord.Colour.red())
                embed.add_field(name="–ü–æ–ª–∏—Ç–∏–∫–∞", value="–í—Å–µ —Ä–µ—Å—É—Ä—Å –ø–∞–∫–∏ –¥–æ–ª–∂–Ω—ã —Å–æ–±–ª—é–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤ [RustMe](https://rustme.net/), –ª—é–±–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∏—Ö –Ω–∞—Ä—É—à–∏—Ç—å –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ —É–¥–∞–ª–µ–Ω–∏—é –†–ü –∏ –µ–≥–æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ.\n\n –ú—ã –Ω–µ –Ω–µ—Å–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–ª—É—á–∞–µ –∏–≥—Ä–æ–≤–æ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –†–ü. \n\n –ï—Å–ª–∏ –†–ü —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –ø—Ä–∞–≤–∏–ª –ø–µ—Ä–µ—Å—Ç–∞–µ—Ç —Å–æ–±–ª—é–¥–∞—Ç—å –∏—Ö, —Å–æ–∑–¥–∞—Ç–µ–ª—å –æ–±—è–∑–∞–Ω —Å–æ–æ–±—â–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º ([Magasty](https://discordapp.com/users/692387119892529255) | [Iwoje](https://discordapp.com/users/962274709368623116))\n\n RustMe Helper –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –ø—Ä–æ–¥—É–∫—Ç–æ–º RustMe, –Ω–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω RustMe.", inline=False)

        await interaction.response.send_message(embed=embed, ephemeral=True)
                

class PackSelect(discord.ui.Select):
    def __init__(self, category):
        data = load_rp()
        self.category = category
        packs = data["resourcepacks"][category]
        
        options = []
        for pack_key, pack_data in packs.items():
            emoji = "<:partner:1281008270617870442>" if pack_data.get('partner', False) else "<:download:1281008276196294699>"
            options.append(discord.SelectOption(label=pack_key, emoji=emoji))
        
        super().__init__(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Å—É—Ä—Å-–ø–∞–∫...", options=options)

    async def callback(self, interaction: discord.Interaction):
        await interaction.response.defer(ephemeral=True)
        data = load_rp()
        selected_pack = self.values[0]
        pack_data = data["resourcepacks"][self.category][selected_pack]
        if pack_data['version'] == f"{cfg.client_version()}":
            embed = discord.Embed(title=f"{selected_pack}", color=category_color(self.category))
        else:
            embed = discord.Embed(title=f"{selected_pack} <:warning:1275746946446921728> –£—Å—Ç–∞—Ä–µ–ª", color=category_color(self.category))
        embed.description = pack_data['description']
        embed.add_field(name="Author", value=f"```{pack_data['author']}```", inline=False)
        if pack_data['last_update'] != "–ù–∏–∫–æ–≥–¥–∞":
            embed.add_field(name="Last update", value=f"```{pack_data['last_update']} ```", inline=True)
        else:
            pass
        if pack_data['image_link'] != None:
            embed.set_image(url=pack_data['image_link'])
        else:
            pass
        embed.add_field(name="–£—Å—Ç–∞–Ω–æ–≤–∫–∞", value=f"[[–°–∫–∞—á–∞—Ç—å]]({pack_data['link']})", inline=True)
        embed.add_field(name="–¢–∏–ø —É—Å—Ç–∞–Ω–æ–≤–∫–∏", value=f"```{pack_data['install']}```", inline=False)
        await interaction.followup.send(embed=embed, ephemeral=True)

class CategorySelectView(discord.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(CategorySelect())

class PackSelectView(discord.ui.View):
    def __init__(self, category):
        super().__init__()
        self.add_item(PackSelect(category))
        
class HelpSelectView(discord.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(HelpSelect())

class BrowseRP(discord.ui.View):
            def __init__(self):
                super().__init__(timeout=None)
                
            @discord.ui.button(label="–ü–æ–∏—Å–∫", style=discord.ButtonStyle.gray, emoji="üîç", custom_id="browserp")
            async def browse_callback(self, button, interaction):
                await interaction.response.defer(ephemeral=True)
                await interaction.followup.send(view=CategorySelectView(), ephemeral=True)
            
            @discord.ui.button(label="–ü–æ–º–æ—â—å", style=discord.ButtonStyle.grey, emoji="‚ùî", custom_id="helprp")
            async def help_callback(self, button, interaction):
                await interaction.response.defer(ephemeral=True)
                await interaction.followup.send(view=HelpSelectView(), ephemeral=True)

        
        
        
        
        
################################################################################################################





class RP(discord.Cog):
    def __init__(self, bot: discord.Bot) -> None:
        self.bot = bot

    @discord.Cog.listener()
    async def on_ready(self) -> None:
        self.bot.add_view(BrowseRP())
        logger.debug("Cog resourcepacks loaded")

    @discord.slash_command(description="–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Ä–µ—Å—É—Ä—Å-–ø–∞–∫–æ–≤")
    async def browse(self, interaction) -> None:
        await interaction.response.defer(ephemeral=True)
        await interaction.followup.send(view=CategorySelectView(), ephemeral=True)
        
        
    @discord.slash_command(description="–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.)")
    @discord.guild_only()
    @commands.has_permissions(administrator=True)
    async def browsemessage(self, interaction):
        await interaction.response.defer(ephemeral=True)
        try:
            embed = discord.Embed(title="–ü–æ–∏—Å–∫ —Ä–ø", description="RustMe Helper - –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ä–µ—Å—É—Ä—Å-–ø–∞–∫–æ–≤ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–æ–≤ RustMe.\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üîΩ", color=discord.Colour.red())
            channel = interaction.channel
            await channel.send(embed=embed, view=BrowseRP())
            await interaction.followup.send("‚úÖ –£—Å–ø–µ—à–Ω–æ", ephemeral=True)
        except discord.ext.commands.errors.MissingPermissions as e:
            await interaction.followup.send("‚ùå –£ –ë–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.", ephemeral=True)
        except discord.errors.Forbidden:
            await interaction.followup.send("‚ùå –£ –ë–æ—Ç–∞ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.", ephemeral=True)
        
def setup(bot: discord.Bot) -> None:
    bot.add_cog(RP(bot))